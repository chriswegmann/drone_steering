import { InputLayerConfig } from './engine/input_layer';
import { Layer, LayerConfig } from './engine/topology';
import { input } from './exports';
import { ELULayerConfig, LeakyReLULayerConfig, ReLULayerConfig, SoftmaxLayerConfig, ThresholdedReLULayerConfig } from './layers/advanced_activations';
import { ConvLayerConfig, Cropping2DLayerConfig, SeparableConvLayerConfig, UpSampling2DLayerConfig } from './layers/convolutional';
import { DepthwiseConv2DLayerConfig } from './layers/convolutional_depthwise';
import { ActivationLayerConfig, DenseLayerConfig, DropoutLayerConfig, PermuteLayerConfig, RepeatVectorLayerConfig, ReshapeLayerConfig } from './layers/core';
import { EmbeddingLayerConfig } from './layers/embeddings';
import { ConcatenateLayerConfig } from './layers/merge';
import { BatchNormalizationLayerConfig } from './layers/normalization';
import { ZeroPadding2DLayerConfig } from './layers/padding';
import { GlobalPooling2DLayerConfig, Pooling1DLayerConfig, Pooling2DLayerConfig } from './layers/pooling';
import { GRUCellLayerConfig, GRULayerConfig, LSTMCellLayerConfig, LSTMLayerConfig, RNN, RNNCell, RNNLayerConfig, SimpleRNNCellLayerConfig, SimpleRNNLayerConfig, StackedRNNCellsConfig } from './layers/recurrent';
import { BidirectionalLayerConfig, Wrapper, WrapperLayerConfig } from './layers/wrappers';
export declare function inputLayer(config: InputLayerConfig): Layer;
export declare function elu(config?: ELULayerConfig): Layer;
export declare function reLU(config?: ReLULayerConfig): Layer;
export declare function leakyReLU(config?: LeakyReLULayerConfig): Layer;
export declare function softmax(config?: SoftmaxLayerConfig): Layer;
export declare function thresholdedReLU(config?: ThresholdedReLULayerConfig): Layer;
export declare function conv1d(config: ConvLayerConfig): Layer;
export declare function conv2d(config: ConvLayerConfig): Layer;
export declare function conv2dTranspose(config: ConvLayerConfig): Layer;
export declare function separableConv2d(config: SeparableConvLayerConfig): Layer;
export declare function cropping2D(config: Cropping2DLayerConfig): Layer;
export declare function upSampling2d(config: UpSampling2DLayerConfig): Layer;
export declare function depthwiseConv2d(config: DepthwiseConv2DLayerConfig): Layer;
export declare function activation(config: ActivationLayerConfig): Layer;
export declare function dense(config: DenseLayerConfig): Layer;
export declare function dropout(config: DropoutLayerConfig): Layer;
export declare function flatten(config?: LayerConfig): Layer;
export declare function repeatVector(config: RepeatVectorLayerConfig): Layer;
export declare function reshape(config: ReshapeLayerConfig): Layer;
export declare function permute(config: PermuteLayerConfig): Layer;
export declare function embedding(config: EmbeddingLayerConfig): Layer;
export declare function add(config?: LayerConfig): Layer;
export declare function average(config?: LayerConfig): Layer;
export declare function concatenate(config?: ConcatenateLayerConfig): Layer;
export declare function maximum(config?: LayerConfig): Layer;
export declare function minimum(config?: LayerConfig): Layer;
export declare function multiply(config?: LayerConfig): Layer;
export declare function batchNormalization(config?: BatchNormalizationLayerConfig): Layer;
export declare function zeroPadding2d(config?: ZeroPadding2DLayerConfig): Layer;
export declare function averagePooling1d(config: Pooling1DLayerConfig): Layer;
export declare function avgPool1d(config: Pooling1DLayerConfig): Layer;
export declare function avgPooling1d(config: Pooling1DLayerConfig): Layer;
export declare function averagePooling2d(config: Pooling2DLayerConfig): Layer;
export declare function avgPool2d(config: Pooling2DLayerConfig): Layer;
export declare function avgPooling2d(config: Pooling2DLayerConfig): Layer;
export declare function globalAveragePooling1d(config: LayerConfig): Layer;
export declare function globalAveragePooling2d(config: GlobalPooling2DLayerConfig): Layer;
export declare function globalMaxPooling1d(config: LayerConfig): Layer;
export declare function globalMaxPooling2d(config: GlobalPooling2DLayerConfig): Layer;
export declare function maxPooling1d(config: Pooling1DLayerConfig): Layer;
export declare function maxPooling2d(config: Pooling2DLayerConfig): Layer;
export declare function gru(config: GRULayerConfig): Layer;
export declare function gruCell(config: GRUCellLayerConfig): RNNCell;
export declare function lstm(config: LSTMLayerConfig): Layer;
export declare function lstmCell(config: LSTMCellLayerConfig): RNNCell;
export declare function simpleRNN(config: SimpleRNNLayerConfig): Layer;
export declare function simpleRNNCell(config: SimpleRNNCellLayerConfig): RNNCell;
export declare function rnn(config: RNNLayerConfig): Layer;
export declare function stackedRNNCells(config: StackedRNNCellsConfig): RNNCell;
export declare function bidirectional(config: BidirectionalLayerConfig): Wrapper;
export declare function timeDistributed(config: WrapperLayerConfig): Layer;
export declare const globalMaxPool1d: typeof globalMaxPooling1d;
export declare const globalMaxPool2d: typeof globalMaxPooling2d;
export declare const maxPool1d: typeof maxPooling1d;
export declare const maxPool2d: typeof maxPooling2d;
export { Layer, RNN, RNNCell, input };
